version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: office_atte_redis_prod
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
    container_name: office_atte_backend_prod
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ORACLE_HOST=${ORACLE_HOST}
      - ORACLE_PORT=${ORACLE_PORT}
      - ORACLE_SERVICE=${ORACLE_SERVICE}
      - ORACLE_USER=${ORACLE_USER}
      - ORACLE_PASSWORD=${ORACLE_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs

  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
    container_name: office_atte_frontend_prod
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  scheduler:
    build:
      context: ./backend
      dockerfile: dockerfile
    container_name: office_atte_scheduler_prod
    restart: unless-stopped
    command: python3 /app/app/core/scheduler.py
    environment:
      - ORACLE_HOST=${ORACLE_HOST}
      - ORACLE_PORT=${ORACLE_PORT}
      - ORACLE_SERVICE=${ORACLE_SERVICE}
      - ORACLE_USER=${ORACLE_USER}
      - ORACLE_PASSWORD=${ORACLE_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=INFO
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs

volumes:
  redis_data:
    driver: local
